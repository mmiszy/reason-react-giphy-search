// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReasonReact from "reason-react/lib/es6/src/ReasonReact.js";
import * as Utils$ReactTemplate from "./Utils.bs.js";
import * as GifsList$ReactTemplate from "./GifsList.bs.js";
import * as GiphyApi$ReactTemplate from "./GiphyApi.bs.js";

function initialState() {
  return /* record */[
          /* text */"",
          /* isFetching */false,
          /* response : None */0
        ];
}

function _fetchGifsInternal(text, param) {
  var send = param[/* send */3];
  GiphyApi$ReactTemplate.searchGifs(text).then((function (response) {
            return Promise.resolve(Curry._1(send, /* DataFetched */Block.__(1, [response])));
          })).catch((function (err) {
          console.error(err);
          return Promise.resolve(Curry._1(send, /* FetchError */0));
        }));
  return /* () */0;
}

var fetchGifs = Utils$ReactTemplate.debounce2(_fetchGifsInternal, 300);

function reducer(action, state) {
  if (typeof action === "number") {
    return /* NoUpdate */0;
  } else if (action.tag) {
    return /* Update */Block.__(0, [/* record */[
                /* text */state[/* text */0],
                /* isFetching */false,
                /* response */action[0]
              ]]);
  } else {
    var text = action[0];
    if (text === "") {
      return /* Update */Block.__(0, [/* record */[
                  /* text */state[/* text */0],
                  /* isFetching */false,
                  /* response : Some */[/* [] */0]
                ]]);
    } else {
      return /* UpdateWithSideEffects */Block.__(2, [
                /* record */[
                  /* text */state[/* text */0],
                  /* isFetching */true,
                  /* response */state[/* response */2]
                ],
                (function (param) {
                    return fetchGifs(text, param);
                  })
              ]);
    }
  }
}

var component = ReasonReact.reducerComponent("GiphsListContainer");

function make(text, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */(function (self) {
              var init = self[/* state */1];
              return /* record */[
                      /* text */text,
                      /* isFetching */init[/* isFetching */1],
                      /* response */init[/* response */2]
                    ];
            }),
          /* didMount */(function (param) {
              console.log(text);
              return Curry._1(param[/* send */3], /* FetchingStarted */Block.__(0, [text]));
            }),
          /* didUpdate */(function (param) {
              var newSelf = param[/* newSelf */1];
              if (param[/* oldSelf */0][/* state */1][/* text */0] !== newSelf[/* state */1][/* text */0]) {
                Curry._1(newSelf[/* send */3], /* FetchingStarted */Block.__(0, [text]));
              }
              return /* () */0;
            }),
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1][/* response */2];
              var match$1 = self[/* state */1][/* isFetching */1];
              var exit = 0;
              if (match && !match$1) {
                return ReasonReact.element(/* None */0, /* None */0, GifsList$ReactTemplate.make(match[0], /* array */[]));
              } else {
                exit = 1;
              }
              if (exit === 1) {
                return React.createElement("div", {
                            className: "loading-indicator"
                          }, "Ładowanie…");
              }
              
            }),
          /* initialState */initialState,
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */reducer,
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

export {
  initialState ,
  _fetchGifsInternal ,
  fetchGifs ,
  reducer ,
  component ,
  make ,
  
}
/* fetchGifs Not a pure module */
